from longest_pal import Solution


def test_1():
    assert(Solution.longestPalindrome(None, 'babad') in {'aba', 'bab'})


def test_2():
    assert(Solution.longestPalindrome(None, 'cbbd') in {'bb'})


def test_3():
    assert(Solution.longestPalindrome(None, '') in {''})


def test_4():
    assert(Solution.longestPalindrome(None, 'a') in {'a'})


def test_5():
    assert(Solution.longestPalindrome(None, 'vv') in {'vv'})


def test_6():
    assert(Solution.longestPalindrome(None, 'qwerregh') in {'erre'})


def test_mana_odd_1():
    assert(Solution.longestPalindrome(None, 'fqwqhqwqfk') in {'fqwqhqwqf'})


def test_mana_odd_2():
    assert(Solution.longestPalindrome(None, 'fzfqwqhjhqwqhjhqwqfu') in
           {'fqwqhjhqwqhjhqwqf'})


def test_mana_even_1():
    assert(Solution.longestPalindrome(None, 'fqwqhhqwqfk') in {'fqwqhhqwqf'})


def test_mana_even_2():
    assert(Solution.longestPalindrome(None, 'fzfqwqhjhqwwqhjhqwqfu') in
           {'fqwqhjhqwwqhjhqwqf'})


def test_mana_even_3():
    assert(Solution.longestPalindrome(None, 'abcdbbfcba') in {'bb'})


def test_mana_even_long():
    assert(Solution.longestPalindrome(Nonein {})
