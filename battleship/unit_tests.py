#!/usr/bin/env python3

import unittest

from validate_battlefield import validate_battlefield


class TestBattlefieldValidate(unittest.TestCase):

	def test_right(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), True)

	def test_ships_1(self):
		battleField = [
			[0, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)

	def test_ships_2(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)

	def test_ships_3(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)

	def test_figure_1(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)

	def test_figure_2(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)

	def test_borders_1(self):
		battleField = [
			[1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
			[1, 0, 1, 0, 0, 0, 0, 0, 1, 0],
			[1, 0, 1, 0, 1, 1, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
			[0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
			[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
		]
		self.assertEqual(validate_battlefield(battleField), False)


if __name__ == "__main__":
	unittest.main()
